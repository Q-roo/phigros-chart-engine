namespace PCE.Chartbuild;

public static class TokenTypeExtensions
{
    public static string ToSourceString(this TokenType type)
    {
        return type switch
        {
            TokenType.Unknown            => "unknown",
            TokenType.Identifier         => "identifier",
            TokenType.Literal            => "literal",
            TokenType.StringLiteral      => "string",
            TokenType.IntLiteral         => "int",
            TokenType.FloatLiteral       => "float",
            TokenType.LessThan           => "<",
            TokenType.LessThanOrEqual    => "<=",
            TokenType.GreaterThan        => ">",
            TokenType.GreaterThanOrEqual => ">=",
            TokenType.Equal              => "==",
            TokenType.NotEqual           => "!=",
            TokenType.And                => "&&",
            TokenType.Or                 => "||",
            TokenType.Not                => "!",
            TokenType.BitwiseAnd         => "&",
            TokenType.BitwiseOr          => "|",
            TokenType.BitwiseNot         => "~",
            TokenType.BitwiseXor         => "^",
            TokenType.ShiftLeft          => "<<",
            TokenType.ShiftRight         => ">>",
            TokenType.Plus               => "+",
            TokenType.Minus              => "-",
            TokenType.Multiply           => "*",
            TokenType.Power              => "**",
            TokenType.Divide             => "/",
            TokenType.Modulo             => "%",
            TokenType.Assign             => "=",
            TokenType.DotAssign          => ".=",
            TokenType.PlusAssign         => "+=",
            TokenType.MinusAssign        => "-=",
            TokenType.MultiplyAssign     => "*=",
            TokenType.PowerAssign        => "**=",
            TokenType.DivideAssign       => "/=",
            TokenType.ModuloAssign       => "%=",
            TokenType.ShiftLeftAssign    => "<<=",
            TokenType.ShiftRightAssign   => ">>=",
            TokenType.BitwiseAndAssign   => "&=",
            TokenType.BitwiseOrAssign    => "|=",
            TokenType.BitwiseXorAssign   => "^=",
            TokenType.BitswiseNotAssign  => "~=",
            TokenType.Increment          => "++",
            TokenType.Decrement          => "--",
            TokenType.If                 => "if",
            TokenType.Else               => "else",
            TokenType.QuestionMark       => "?",
            TokenType.For                => "for",
            TokenType.While              => "while",
            TokenType.Break              => "break",
            TokenType.Continue           => "continue",
            TokenType.Return             => "return",
            TokenType.Switch             => "switch",
            TokenType.Case               => "case",
            TokenType.Let                => "let",
            TokenType.Const              => "const",
            TokenType.Fn                 => "fn",
            TokenType.In                 => "in",
            TokenType.LeftBracket        => "[",
            TokenType.RightBracket       => "]",
            TokenType.LeftBrace          => "{",
            TokenType.RightBrace         => "}",
            TokenType.LeftParenthesis    => "(",
            TokenType.RightParenthesis   => ")",
            TokenType.Coma               => ",",
            TokenType.Semicolon          => ";",
            TokenType.Dot                => ".",
            TokenType.DotDot             => "..",
            TokenType.DotDotEqual        => "..=",
            TokenType.Colon              => ":",
            TokenType.RightArrow     => "->",
            // TokenType.RightArrowThick => "=>",
            TokenType.Hash               => "#",
            TokenType.Eof                => "EOF",
            _                            => "???"
        };
    }
}